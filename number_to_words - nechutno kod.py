from math import ceil
nums1, nums2, nums3, predpony, koncovky = ["", "jedna", "dva", "tři", "čtyři", "pět", "šest", "sedm", "osm", "devět", "deset", "jedenáct", "dvanáct", "třináct", "čtrnáct", "patnáct", "šestnáct", "sedmnáct", "osmnáct", "devatenáct"], {2: "dvacet", 3: "třicet", 4: "čtyřicet", 5: "padesát", 6: "šedesát", 7: "sedmdesát", 8: "osmdesát", 9: "devadesát"}, {100: ["sto", "stě", "sta", "sta", "set"], 1000: ["tisíc", "tisíce", "tisíce", "tisíce", "tisíc"]}, ["mi", "bi", "tri", "kvadri", "kvinti", "sexti", "septi", "okti", "noni", "deci"], [["lion", "", "y", "ů"], ["liard", "a", "y", ""]]
get_higher, get_for_am, get_ones, get_tens, get_hundereds, from_0_to_999, remove_spaces = lambda n, x: "" if n == 0 else get_for_am(x, 1000) if n == 1 else predpony[(n-2)//2]+koncovky[n%2][0]+koncovky[n%2][(0 if x == 1 else 1 if x > 1 and x < 5 else 2)+1], lambda n, x: nums3[x][-1] if n >= len(nums3[x]) else nums3[x][n-1], lambda n, hun=False, ind=None, tens=False: nums1[n] if tens else nums1[n] if n == 2 and not hun and (ind == 1 or ind % 2 == 0) else "dvě" if n == 2 else ("jeden" if ind == 1 or ind % 2 == 0 and ind != 0 else nums1[n]) if not hun and n == 1 else nums1[n], lambda n, ind: "" if n == 0 else nums1[n] if n < 20 else nums2[n//10] + " " + get_ones(n%10, ind=ind, tens=True), lambda n: "" if n == 0 else get_for_am(n, 100) if n == 1 else get_ones(n, hun=True) + " " + get_for_am(n, 100), lambda n, ind: get_ones(n, ind=ind) if len(str(n)) == 1 else get_tens(n, ind) if len(str(n)) == 2 else get_hundereds(n//100)+" "+get_tens(n%100, ind), lambda st: "".join([st[x] if x == 0 or st[x] != " " or st[x-1] != " " else "" for x in range(len(st))])
def cislo_na_text(num):
    negative, num = True if num < 0 else False, int(num * -1) if num < 0 else int(num)
    n_lst = [str(num)[-(i*3+3):] if i == 0 else str(num)[-(i*3+3):-(i*3)] for i in range(ceil(len(str(num))/3))]
    return None if num >= 10**66 or num <= -10**66 else remove_spaces(("mínus " if negative else "")+" ".join([get_higher(i, int(n_lst[i])) if i == len(n_lst)-1 and i != 0 and n_lst[i] == "1" else from_0_to_999(int(n_lst[i]), i)+" "+get_higher(i, int(n_lst[i])) if from_0_to_999(int(n_lst[i]), i) != "" else "" for i in range(len(n_lst))][::-1]).replace("  ", " ").strip()) if num != 0 else "nula"
